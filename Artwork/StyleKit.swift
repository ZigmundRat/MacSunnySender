//
//  StyleKit.swift
//
//  Created on 2/09/17.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

import UIKit



class StyleKit: NSObject {
    
    
    //MARK: - Canvas Drawings
    
    /// Page 1
    
    class func drawPage1() {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Right Connector 2
        let rightConnector2 = UIBezierPath(roundedRect: CGRect(x: 0, y: 0, width: 38, height: 48), cornerRadius: 16)
        context.saveGState()
        context.translateBy(x: 432, y: 465)
        UIColor(white: 0.847, alpha: 1).setFill()
        rightConnector2.fill()
        context.saveGState()
        rightConnector2.lineWidth = 12
        context.beginPath()
        context.addPath(rightConnector2.cgPath)
        context.clip(using: .evenOdd)
        UIColor(white: 0.592, alpha: 1).setStroke()
        rightConnector2.stroke()
        context.restoreGState()
        context.restoreGState()
        /// Left Connector
        let leftConnector = UIBezierPath(roundedRect: CGRect(x: 0, y: 0, width: 38, height: 48), cornerRadius: 16)
        context.saveGState()
        context.translateBy(x: 382, y: 463)
        UIColor(white: 0.847, alpha: 1).setFill()
        leftConnector.fill()
        context.saveGState()
        leftConnector.lineWidth = 12
        context.beginPath()
        context.addPath(leftConnector.cgPath)
        context.clip(using: .evenOdd)
        UIColor(white: 0.592, alpha: 1).setStroke()
        leftConnector.stroke()
        context.restoreGState()
        context.restoreGState()
        /// Device
        let device = UIBezierPath(roundedRect: CGRect(x: 0, y: 0, width: 260, height: 198), cornerRadius: 17)
        context.saveGState()
        context.translateBy(x: 346, y: 285)
        context.saveGState()
        device.addClip()
        context.drawLinearGradient(CGGradient(colorsSpace: nil, colors: [
                    UIColor(hue: 1, saturation: 0.912, brightness: 0.814, alpha: 1).cgColor,
                    UIColor(hue: 1, saturation: 0.94, brightness: 0.884, alpha: 1).cgColor,
                ] as CFArray, locations: [0.15, 1])!,
            start: CGPoint(x: 130, y: 0),
            end: CGPoint(x: 130, y: 148.37),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()
        context.saveGState()
        device.lineWidth = 8
        context.beginPath()
        context.addPath(device.cgPath)
        context.clip(using: .evenOdd)
        UIColor(hue: 1, saturation: 0.942, brightness: 0.882, alpha: 1).setStroke()
        device.stroke()
        context.restoreGState()
        context.restoreGState()
        /// Rectangle 3
        let rectangle3 = UIBezierPath(roundedRect: CGRect(x: 0, y: 0, width: 214, height: 18), cornerRadius: 16)
        context.saveGState()
        context.translateBy(x: 367, y: 451)
        UIColor(white: 0.847, alpha: 1).setFill()
        rectangle3.fill()
        context.saveGState()
        rectangle3.lineWidth = 2
        context.beginPath()
        context.addPath(rectangle3.cgPath)
        context.clip(using: .evenOdd)
        UIColor(white: 0.592, alpha: 1).setStroke()
        rectangle3.stroke()
        context.restoreGState()
        context.restoreGState()
        /// Display
        let display = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 117, height: 68))
        context.saveGState()
        context.translateBy(x: 367, y: 314)
        context.saveGState()
        display.addClip()
        context.drawLinearGradient(CGGradient(colorsSpace: nil, colors: [
                    UIColor(hue: 0.227, saturation: 0.904, brightness: 0.63, alpha: 1).cgColor,
                    UIColor(hue: 0.285, saturation: 0.775, brightness: 0.578, alpha: 1).cgColor,
                ] as CFArray, locations: [0, 1])!,
            start: CGPoint(x: 58.5, y: 17.15),
            end: CGPoint(x: 58.5, y: 36.96),
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()
        context.saveGState()
        display.lineWidth = 10
        context.beginPath()
        context.addPath(display.cgPath)
        context.clip(using: .evenOdd)
        UIColor(white: 0.592, alpha: 1).setStroke()
        display.stroke()
        context.restoreGState()
        context.restoreGState()
        /// Badge
        let badge = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 109, height: 109))
        context.saveGState()
        context.translateBy(x: 527, y: 260)
        context.saveGState()
        badge.addClip()
        // Warning: Angular gradients are not supported.
        context.restoreGState()
        badge.lineWidth = 7
        UIColor(white: 0.592, alpha: 1).setStroke()
        badge.stroke()
        context.restoreGState()
    }
    
    
}
